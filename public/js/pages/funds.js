(()=>{var t="payment-methods/";new Vue({el:"#app",data:{postdata:{},errors:{},payementMethod:{},card:{},stripe:{},total_funds:0,stripe_payment_id:2,loading:!0,processing:!1},methods:{valideForm:function(){this.errors={},this.postdata.confirmation||this.$set(this.errors,"confirmation",{required:!0}),this.postdata.amount||this.$set(this.errors,"amount",{required:!0}),this.postdata.amount&&parseFloat(this.postdata.amount)<parseFloat(this.payementMethod.min)&&this.$set(this.errors,"amount",{min:!0}),this.postdata.amount&&parseFloat(this.postdata.amount)>parseFloat(this.payementMethod.max)&&this.$set(this.errors,"amount",{max:!0})},addFunds:function(){var t=this,e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.getPaymentMethod((function(a){if(t.payementMethod=a.data,t.$set(t.postdata,"min",a.data.min),t.$set(t.postdata,"max",a.data.max),t.$set(t.postdata,"method_id",e),t.$set(t.postdata,"amount",parseFloat(t.postdata.amount)),t.valideForm(),0==Object.keys(t.errors).length&&0==document.getElementById("card-errors").textContent.length)if(t.processing=!0,2==t.payementMethod.id){var o="stripe";t.stripe.createToken(t.card).then((function(e){e.error?document.getElementById("card-errors").textContent=e.error.message:(t.$set(t.postdata,"stripe_token",e.token),axios.post("add-funds/"+o,t.postdata).then((function(e){200==e.status&&(t.card.clear(),window.utilities.notify("success","your payment has been processed successfully"),t.postdata={},t.processing=!1)})).catch((function(e){$(t.modal_target).modal("hide"),window.utilities.notify("error","for security reasons you can't update data in demo version")})))}))}else if(1==t.payementMethod.id){o="paypal";axios.post("add-funds/"+o,t.postdata).then((function(e){200==e.status&&(t.card.clear(),t.postdata={},t.processing=!1,window.location.href=e.data.redirect_url)})).catch((function(e){300==e.response.status&&($(t.modal_target).modal("hide"),window.utilities.notify("error","for security reasons you can't update data in demo version"))}))}}),e)},getPaymentMethod:function(e,a){axios.get(t+a).then((function(t){200==t.status&&e(t)}))},getCard:function(){var e=this;axios.get(t+this.stripe_payment_id).then((function(t){if(200==t.status){e.stripe=Stripe(t.data.api_key,{locale:"en"});var a=e.stripe.elements().create("card",{style:{base:{color:"#32325d",lineHeight:"24px",fontFamily:'"Helvetica Neue", Helvetica, sans-serif',fontSmoothing:"antialiased",fontSize:"16px","::placeholder":{color:"#aab7c4"}},invalid:{color:"#e04f1a",iconColor:"#e04f1a"}}});e.card=a,e.loading=!1,setTimeout((function(){a.mount("#card-element"),a.addEventListener("change",(function(t){var e=document.getElementById("card-errors");t.error?e.textContent=t.error.message:e.textContent=""}))}),0)}}))},getAmount:function(){if(this.postdata.amount){var t=0;$("#payement1").hasClass("active")&&(t=parseFloat($("#paypal_fee").html())),$("#payement2").hasClass("active")&&(t=parseFloat($("#strip_fee").html())),this.total_funds=parseFloat(this.postdata.amount)+parseFloat(this.postdata.amount*t/100),this.$set(this.postdata,"amount_total",this.total_funds.toFixed(2))}else this.$set(this.postdata,"amount_total",0)}},mounted:function(){this.getCard()}})})();